name: "Release a Grafana plugin"
description: "Signs, packages, and releases a Grafana plugin"
inputs:
  api-key:
    description: "An API key with a PluginPublisher role"
    required: true
  github-token:
    description: "GitHub token to use"
    required: true
outputs:
  url:
    description: "URL to the release asset"
    value: ${{ steps.upload-plugin-asset.outputs.browser_download_url }}
  md5:
    description: "MD5 of the release asset"
    value: ${{ steps.set-md5-output.outputs.md5 }}
runs:
  using: "composite"
  steps:
    - name: Sign plugin
      shell: bash
      run: yarn run grafana-toolkit plugin:sign
      env:
        GRAFANA_API_KEY: ${{ inputs.api-key }}

    - name: Get plugin information
      shell: bash
      run: |
        sudo apt-get install jq

        export GRAFANA_PLUGIN_ID=$(cat dist/plugin.json | jq -r .id)
        export GRAFANA_PLUGIN_VERSION=$(cat dist/plugin.json | jq -r .info.version)
        export GRAFANA_PLUGIN_TYPE=$(cat dist/plugin.json | jq -r .type)
        export GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ID}-${GRAFANA_PLUGIN_VERSION}.zip
        export GRAFANA_PLUGIN_ARTIFACT_CHECKSUM=${GRAFANA_PLUGIN_ARTIFACT}.md5

        # Output to $GITHUB_ENV to be able to use the variables in next steps.
        echo "GRAFANA_PLUGIN_ID=${GRAFANA_PLUGIN_ID}" >> $GITHUB_ENV
        echo "GRAFANA_PLUGIN_VERSION=${GRAFANA_PLUGIN_VERSION}" >> $GITHUB_ENV
        echo "GRAFANA_PLUGIN_TYPE=${GRAFANA_PLUGIN_TYPE}" >> $GITHUB_ENV
        echo "GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ARTIFACT}" >> $GITHUB_ENV
        echo "GRAFANA_PLUGIN_ARTIFACT_CHECKSUM=${GRAFANA_PLUGIN_ARTIFACT_CHECKSUM}" >> $GITHUB_ENV

    - name: Package plugin
      shell: bash
      run: |
        mv dist $GRAFANA_PLUGIN_ID
        zip $GRAFANA_PLUGIN_ARTIFACT $GRAFANA_PLUGIN_ID -r
        md5sum $GRAFANA_PLUGIN_ARTIFACT > $GRAFANA_PLUGIN_ARTIFACT_CHECKSUM

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Add plugin to release
      id: upload-plugin-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.GRAFANA_PLUGIN_ARTIFACT }}
        asset_name: ${{ env.GRAFANA_PLUGIN_ARTIFACT }}
        asset_content_type: application/zip

    - name: Add checksum to release
      id: upload-checksum-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ env.GRAFANA_PLUGIN_ARTIFACT_CHECKSUM }}
        asset_name: ${{ env.GRAFANA_PLUGIN_ARTIFACT_CHECKSUM }}
        asset_content_type: text/plain

    - name: Set MD5 output
      id: set-md5-output
      shell: bash
      run: |
        run: echo "::set-output name=md5::$(cat ./${{ env.GRAFANA_PLUGIN_ARTIFACT_CHECKSUM }} | cut -d' ' -f1)"
